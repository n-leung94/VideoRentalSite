
@model VideoRentalService.ViewModels.CustomerFormViewModel
@{
    ViewBag.Title = "New";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>New Customer</h2>

@* Create -> Triggers an action In Customer Models upon Submit Button pressed*@
@using (Html.BeginForm("Save", "Customers"))
{
    @Html.ValidationSummary(true, "Please fix the following errors")
    <div class="form-group">
        @Html.LabelFor(m => m.Customer.Name)
        @Html.TextBoxFor(m => m.Customer.Name, new { @class = "form-control" })     @*Class = Form Control is an additional attribute to have a nicer designed box.*@
        @Html.ValidationMessageFor(m => m.Customer.Name) @*The Validation Msg will be displayed based on annotation set on customer model if a user has invalid input.*@
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Customer.MembershipTypeId)
        @Html.DropDownListFor(m => m.Customer.MembershipTypeId, new SelectList(Model.MembershipTypes, "Id", "Name"), "Select Membership Type", new { @class = "form-control" })
        @*Items List/ The property holding the data / The Text Labels*@
        @Html.ValidationMessageFor(m => m.Customer.MembershipTypeId)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Customer.Birthdate)
        @Html.TextBoxFor(m => m.Customer.Birthdate, "{0:d MMM yyyy}", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Customer.Birthdate)
    </div>



    <div class="checkbox">
        <label>
            @Html.CheckBoxFor(m => m.Customer.IsSubscribedToNewsletter) Subscribed to Newsletter ?
        </label>
    </div>

    @Html.HiddenFor(m => m.Customer.Id) @*Required when updating data, the ID*@
    @Html.AntiForgeryToken()
    <button type="submit" class="btn btn-primary">Submit</button>
}

@section scripts
{
    @*Enables Client Side Validation based on Data Annotation
      Note: Only works for standared C# Data Annotation and not User Defined*@
    @Scripts.Render("~/bundles/jqueryval")
}